import java.io.BufferedReader;
import java.io.DataInputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.util.Enumeration;
import java.util.Map;
import java.util.UUID;

import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import net.sf.saxon.Query;

/**
 * Servlet implementation class Xquery
 */
public class Xquery extends HttpServlet {
	private static final long serialVersionUID = 1L;

	/**
	 * @see HttpServlet#HttpServlet()
	 */
	public Xquery() {
		super();
		// TODO Auto-generated constructor stub
	}

	/**
	 * @see HttpServlet#doGet(HttpServletRequest request, HttpServletResponse
	 *      response)
	 */
	protected void doGet(HttpServletRequest request,
			HttpServletResponse response) throws ServletException, IOException {
		// TODO Auto-generated method stub
		PrintWriter out = null;
		UUID uuid = UUID.randomUUID();

		// Filename using UUID
		String fileName = uuid.toString() + ".xml";

		String xQuery = request.getParameter("xquery");

		try {

//			String[] args = {
//					"-qs:"
//							+ "for $x in doc(\"books.xml\")/catalog/book return $x",
//					"-o:" + fileName };

			 String[] args = { "-qs:" + xQuery, "-o:" + fileName };

			Query.main(args);

			response.setContentType("text/html");
			out = response.getWriter();

			// Open the file that is the first
			// command line parameter
			FileInputStream fstream = new FileInputStream(fileName);

			// Get the object of DataInputStream
			DataInputStream in = new DataInputStream(fstream);
			BufferedReader br = new BufferedReader(new InputStreamReader(in));
			String strLine;

			// Read File Line By Line
			while ((strLine = br.readLine()) != null) {
				// Print the content on the console
				out.println(strLine);
			}
			// Close the input stream
			in.close();

			File target = new File(fileName);
			
			//delete the temp file
			target.delete();

		} catch (Exception e1) {
			// TODO Auto-generated catch block
			e1.printStackTrace();
		}

	}

	/**
	 * @see HttpServlet#doPost(HttpServletRequest request, HttpServletResponse
	 *      response)
	 */
	protected void doPost(HttpServletRequest request,
			HttpServletResponse response) throws ServletException, IOException {
		// TODO Auto-generated method stub
		PrintWriter out = null;
		UUID uuid = UUID.randomUUID();

		// Filename using UUID
		String fileName = uuid.toString() + ".xml";

//		String xQuery = request.getParameter("xquery");

		Map params = request.getParameterMap();
		String xQuery = (String) params.get("xquery");

        Enumeration parameterNames = request.getParameterNames();
		Enumeration en = parameterNames;
        
		out = response.getWriter();
		
        while (en.hasMoreElements()) {
            
            String paramName = (String) en.nextElement();
            out.println(paramName + " = " + request.getParameter(paramName) + "<br/>");
            
        }
		
		
		System.out.println(xQuery);
		
		try {

			String[] args = {
					"-qs:"
							+ "for $x in doc(\"books.xml\")/catalog/book return $x",
					"-o:" + fileName };

//			 String[] args = { "-qs:" + xQuery, "-o:" + fileName };

			Query.main(args);

			response.setContentType("text/html");
			

			// Open the file that is the first
			// command line parameter
			FileInputStream fstream = new FileInputStream(fileName);

			// Get the object of DataInputStream
			DataInputStream in = new DataInputStream(fstream);
			BufferedReader br = new BufferedReader(new InputStreamReader(in));
			String strLine;

			// Read File Line By Line
			while ((strLine = br.readLine()) != null) {
				// Print the content on the console
				out.println(strLine);
			}
			// Close the input stream
			in.close();

			File target = new File(fileName);
			
			//delete the temp file
			target.delete();

		} catch (Exception e1) {
			// TODO Auto-generated catch block
			e1.printStackTrace();
		}
	}

}
